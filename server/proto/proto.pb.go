// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DigOutStatus int32

const (
	DigOutStatus_Open    DigOutStatus = 0
	DigOutStatus_Opening DigOutStatus = 1
	DigOutStatus_Closing DigOutStatus = 2
	DigOutStatus_Closed  DigOutStatus = 3
	DigOutStatus_Unknown DigOutStatus = 4
)

var DigOutStatus_name = map[int32]string{
	0: "Open",
	1: "Opening",
	2: "Closing",
	3: "Closed",
	4: "Unknown",
}

var DigOutStatus_value = map[string]int32{
	"Open":    0,
	"Opening": 1,
	"Closing": 2,
	"Closed":  3,
	"Unknown": 4,
}

func (x DigOutStatus) String() string {
	return proto.EnumName(DigOutStatus_name, int32(x))
}

func (DigOutStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{0}
}

type DigOutRequest struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DigOutRequest) Reset()         { *m = DigOutRequest{} }
func (m *DigOutRequest) String() string { return proto.CompactTextString(m) }
func (*DigOutRequest) ProtoMessage()    {}
func (*DigOutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{0}
}

func (m *DigOutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DigOutRequest.Unmarshal(m, b)
}
func (m *DigOutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DigOutRequest.Marshal(b, m, deterministic)
}
func (m *DigOutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DigOutRequest.Merge(m, src)
}
func (m *DigOutRequest) XXX_Size() int {
	return xxx_messageInfo_DigOutRequest.Size(m)
}
func (m *DigOutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DigOutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DigOutRequest proto.InternalMessageInfo

func (m *DigOutRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type Service struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DigoutStatus         DigOutStatus `protobuf:"varint,3,opt,name=digout_status,json=digoutStatus,proto3,enum=proto.DigOutStatus" json:"digout_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{1}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDigoutStatus() DigOutStatus {
	if m != nil {
		return m.DigoutStatus
	}
	return DigOutStatus_Open
}

type ServicesReply struct {
	Items                []*Service `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServicesReply) Reset()         { *m = ServicesReply{} }
func (m *ServicesReply) String() string { return proto.CompactTextString(m) }
func (*ServicesReply) ProtoMessage()    {}
func (*ServicesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{2}
}

func (m *ServicesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServicesReply.Unmarshal(m, b)
}
func (m *ServicesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServicesReply.Marshal(b, m, deterministic)
}
func (m *ServicesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicesReply.Merge(m, src)
}
func (m *ServicesReply) XXX_Size() int {
	return xxx_messageInfo_ServicesReply.Size(m)
}
func (m *ServicesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicesReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServicesReply proto.InternalMessageInfo

func (m *ServicesReply) GetItems() []*Service {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.DigOutStatus", DigOutStatus_name, DigOutStatus_value)
	proto.RegisterType((*DigOutRequest)(nil), "proto.DigOutRequest")
	proto.RegisterType((*Service)(nil), "proto.Service")
	proto.RegisterType((*ServicesReply)(nil), "proto.ServicesReply")
}

func init() { proto.RegisterFile("proto.proto", fileDescriptor_2fcc84b9998d60d8) }

var fileDescriptor_2fcc84b9998d60d8 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0xcd, 0x4a, 0xeb, 0x40,
	0x18, 0xbd, 0x49, 0xff, 0xbf, 0xa4, 0x21, 0x77, 0x6e, 0xb9, 0x94, 0xdc, 0xbb, 0xe8, 0x0d, 0x77,
	0x51, 0xba, 0x48, 0x20, 0x22, 0x88, 0x5b, 0x2b, 0x82, 0x42, 0x0b, 0x29, 0xae, 0x4b, 0x6a, 0x3e,
	0xc3, 0x60, 0x33, 0x13, 0x3b, 0x13, 0xa5, 0x5b, 0x5f, 0xc1, 0x47, 0xf3, 0x15, 0x7c, 0x09, 0x77,
	0x92, 0x99, 0x44, 0xec, 0xc2, 0x8d, 0x9b, 0x64, 0xce, 0x77, 0x4e, 0xce, 0x77, 0x72, 0x06, 0xac,
	0x62, 0xc7, 0x25, 0x0f, 0xd4, 0x93, 0x74, 0xd4, 0xcb, 0xfb, 0x9b, 0x71, 0x9e, 0x6d, 0x31, 0x4c,
	0x0a, 0x1a, 0x26, 0x8c, 0x71, 0x99, 0x48, 0xca, 0x99, 0xd0, 0x22, 0xef, 0x4f, 0xcd, 0x2a, 0xb4,
	0x29, 0x6f, 0x43, 0xcc, 0x0b, 0xb9, 0xd7, 0xa4, 0x1f, 0xc1, 0x70, 0x4e, 0xb3, 0x65, 0x29, 0x63,
	0xbc, 0x2f, 0x51, 0x48, 0xf2, 0x0f, 0x6c, 0x81, 0xbb, 0x07, 0x7a, 0x83, 0x6b, 0x96, 0xe4, 0x38,
	0x36, 0x26, 0xc6, 0x74, 0x10, 0x5b, 0xf5, 0x6c, 0x91, 0xe4, 0xe8, 0x67, 0xd0, 0x5b, 0x69, 0x48,
	0x1c, 0x30, 0x69, 0x5a, 0x6b, 0x4c, 0x9a, 0x12, 0x02, 0x6d, 0xf5, 0x95, 0xa9, 0x26, 0xea, 0x4c,
	0x4e, 0x60, 0x98, 0xd2, 0x8c, 0x97, 0x72, 0x2d, 0x64, 0x22, 0x4b, 0x31, 0x6e, 0x4d, 0x8c, 0xa9,
	0x13, 0xfd, 0xd2, 0x09, 0x02, 0xbd, 0x7e, 0xa5, 0xa8, 0xd8, 0xd6, 0x4a, 0x8d, 0xfc, 0x63, 0x18,
	0xd6, 0x8b, 0x44, 0x8c, 0xc5, 0x76, 0x4f, 0xfe, 0x43, 0x87, 0x4a, 0xcc, 0xc5, 0xd8, 0x98, 0xb4,
	0xa6, 0x56, 0xe4, 0xd4, 0x16, 0xb5, 0x28, 0xd6, 0xe4, 0xec, 0x0a, 0xec, 0xcf, 0xa6, 0xa4, 0x0f,
	0xed, 0x65, 0x81, 0xcc, 0xfd, 0x41, 0x2c, 0xe8, 0x55, 0x27, 0xca, 0x32, 0xd7, 0xa8, 0xc0, 0xd9,
	0x96, 0x8b, 0x0a, 0x98, 0x04, 0xa0, 0x5b, 0x01, 0x4c, 0xdd, 0x56, 0x45, 0x5c, 0xb3, 0x3b, 0xc6,
	0x1f, 0x99, 0xdb, 0x8e, 0xde, 0x0c, 0xb0, 0xe6, 0x69, 0x5a, 0x36, 0x7f, 0xbc, 0x00, 0xeb, 0x02,
	0x65, 0x13, 0x8b, 0xfc, 0x0e, 0x74, 0xbb, 0x41, 0xd3, 0x6e, 0x70, 0x5e, 0xb5, 0xeb, 0x8d, 0x0e,
	0xa3, 0xe9, 0xfc, 0xfe, 0xcf, 0xa7, 0x97, 0xd7, 0x67, 0xd3, 0x22, 0x83, 0x50, 0x34, 0x06, 0x97,
	0xd0, 0xd5, 0x61, 0xc9, 0xe8, 0xa0, 0x90, 0xfa, 0x3e, 0xbc, 0x2f, 0x16, 0xf8, 0x44, 0x59, 0xd9,
	0x7e, 0x2f, 0xd4, 0x95, 0x9d, 0x1a, 0x33, 0xb2, 0x80, 0xfe, 0x1c, 0xbf, 0xe5, 0x36, 0x52, 0x6e,
	0x8e, 0x3f, 0x08, 0x53, 0xfc, 0xf0, 0xdb, 0x74, 0x95, 0xea, 0xe8, 0x3d, 0x00, 0x00, 0xff, 0xff,
	0xb7, 0xd4, 0x9c, 0xd4, 0x74, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DdduServiceClient is the client API for DdduService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DdduServiceClient interface {
	GetServices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServicesReply, error)
	DigOut(ctx context.Context, in *DigOutRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeDigOut(ctx context.Context, in *DigOutRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type ddduServiceClient struct {
	cc *grpc.ClientConn
}

func NewDdduServiceClient(cc *grpc.ClientConn) DdduServiceClient {
	return &ddduServiceClient{cc}
}

func (c *ddduServiceClient) GetServices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServicesReply, error) {
	out := new(ServicesReply)
	err := c.cc.Invoke(ctx, "/proto.DdduService/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ddduServiceClient) DigOut(ctx context.Context, in *DigOutRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.DdduService/DigOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ddduServiceClient) DeDigOut(ctx context.Context, in *DigOutRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.DdduService/DeDigOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DdduServiceServer is the server API for DdduService service.
type DdduServiceServer interface {
	GetServices(context.Context, *empty.Empty) (*ServicesReply, error)
	DigOut(context.Context, *DigOutRequest) (*empty.Empty, error)
	DeDigOut(context.Context, *DigOutRequest) (*empty.Empty, error)
}

// UnimplementedDdduServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDdduServiceServer struct {
}

func (*UnimplementedDdduServiceServer) GetServices(ctx context.Context, req *empty.Empty) (*ServicesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServices not implemented")
}
func (*UnimplementedDdduServiceServer) DigOut(ctx context.Context, req *DigOutRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DigOut not implemented")
}
func (*UnimplementedDdduServiceServer) DeDigOut(ctx context.Context, req *DigOutRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeDigOut not implemented")
}

func RegisterDdduServiceServer(s *grpc.Server, srv DdduServiceServer) {
	s.RegisterService(&_DdduService_serviceDesc, srv)
}

func _DdduService_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DdduServiceServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DdduService/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DdduServiceServer).GetServices(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DdduService_DigOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DigOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DdduServiceServer).DigOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DdduService/DigOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DdduServiceServer).DigOut(ctx, req.(*DigOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DdduService_DeDigOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DigOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DdduServiceServer).DeDigOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DdduService/DeDigOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DdduServiceServer).DeDigOut(ctx, req.(*DigOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DdduService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DdduService",
	HandlerType: (*DdduServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServices",
			Handler:    _DdduService_GetServices_Handler,
		},
		{
			MethodName: "DigOut",
			Handler:    _DdduService_DigOut_Handler,
		},
		{
			MethodName: "DeDigOut",
			Handler:    _DdduService_DeDigOut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}
